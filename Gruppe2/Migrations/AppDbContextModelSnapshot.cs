// <auto-generated />
using System;
using Gruppe2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gruppe2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Gruppe2.Models.ColorInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Blue")
                        .HasColumnType("REAL");

                    b.Property<float>("Green")
                        .HasColumnType("REAL");

                    b.Property<float>("Red")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("Colorinfos");
                });

            modelBuilder.Entity("Gruppe2.Models.DateInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Month")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Dateinfos");
                });

            modelBuilder.Entity("Gruppe2.Models.IndexInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ColorInfoID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IndexDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ColorInfoID");

                    b.ToTable("Indexinfos");
                });

            modelBuilder.Entity("Gruppe2.Models.PlantInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("InSeason")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IndexInfoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("IndexInfoID");

                    b.ToTable("Plantinfos");
                });

            modelBuilder.Entity("Gruppe2.Models.PollenRegistrering", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeOfPollen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("PollenRegistreringer");
                });

            modelBuilder.Entity("Gruppe2.Models.PollenResponse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DateInfoID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlantInfoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("DateInfoID");

                    b.HasIndex("PlantInfoID");

                    b.ToTable("PollenResponses");
                });

            modelBuilder.Entity("Gruppe2.Models.IndexInfo", b =>
                {
                    b.HasOne("Gruppe2.Models.ColorInfo", "ColorInfo")
                        .WithMany("IndexInfos")
                        .HasForeignKey("ColorInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColorInfo");
                });

            modelBuilder.Entity("Gruppe2.Models.PlantInfo", b =>
                {
                    b.HasOne("Gruppe2.Models.IndexInfo", "IndexInfo")
                        .WithMany("PlantInfos")
                        .HasForeignKey("IndexInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndexInfo");
                });

            modelBuilder.Entity("Gruppe2.Models.PollenResponse", b =>
                {
                    b.HasOne("Gruppe2.Models.DateInfo", "DateInfo")
                        .WithMany("PollenResponses")
                        .HasForeignKey("DateInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gruppe2.Models.PlantInfo", "PlantInfo")
                        .WithMany("PollenResponses")
                        .HasForeignKey("PlantInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DateInfo");

                    b.Navigation("PlantInfo");
                });

            modelBuilder.Entity("Gruppe2.Models.ColorInfo", b =>
                {
                    b.Navigation("IndexInfos");
                });

            modelBuilder.Entity("Gruppe2.Models.DateInfo", b =>
                {
                    b.Navigation("PollenResponses");
                });

            modelBuilder.Entity("Gruppe2.Models.IndexInfo", b =>
                {
                    b.Navigation("PlantInfos");
                });

            modelBuilder.Entity("Gruppe2.Models.PlantInfo", b =>
                {
                    b.Navigation("PollenResponses");
                });
#pragma warning restore 612, 618
        }
    }
}
